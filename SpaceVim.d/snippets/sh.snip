snippet #!
abbr    #!/bin/sh
alias   shebang
options head
	#!/bin/${1:sh}
	${0}

snippet if
abbr    if [ cond ]; then xxx fi
	if [ ${1} ]; then
	fi

snippet ife
abbr    if [ cond ]; then xxx else xxx fi
	if [ ${1} ]; then
    else
	fi

snippet el
abbr    else xxx
	else
		${1}


snippet elif
	elif [ ${1} ]; then


snippet for
	for ${1:i} in $; do
	done

snippet while
abbr    while cond ; do expr done
	while ${1} ; do
	done


snippet until
	until ${1} ; do
	done


snippet heredoc
alias   h <<
	<< ${1:EOF}
		${0:#:TARGET}
	$1

snippet env
abbr    #!/usr/bin/env ${1}
	#!/usr/bin/env ${1}


snippet tmp
	${1:TMPFILE}=$(mktemp ${2:XXX})
	trap "rm -f '${$1}'" 0               # EXIT
	trap "rm -f '${$1}'; exit 1" 2       # INT
	trap "rm -f '${$1}'; exit 1" 1 15    # HUP TERM
	${0}

snippet function
alias func
	${1:#:name}()
	{
	}

snippet     match-regexp
abbr        =~
options     head
	if [[ $${1:string} =~ ${2:^regexp.*} ]]; then
		${0}
	fi

snippet     assign
abbr        var-assign
options     head
	${1:name}="${2:something}"

snippet     case
options     head
	case "$${1:{name\}}" in
		${2:pattern*})
			${0}
			;;
		*)
			${3:echo "$$1 Didn't match anything"}
	esac

snippet     warn
options     head
	echo "${0:TARGET}" 1>&2

snippet     abort
options     head
	echo "${0:TARGET}" 1>&2
	exit 1

# vim: set noexpandtab :
